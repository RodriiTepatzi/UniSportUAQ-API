// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniSportUAQ_API.Data;

#nullable disable

namespace UniSportUAQ_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240208175330_addin-restart")]
    partial class addinrestart
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UniSportUAQ_API.Data.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstructorId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("InstructorId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("UniSportUAQ_API.Data.CourseClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Hour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Course")
                        .HasColumnType("int");

                    b.Property<int>("Quota")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_Course");

                    b.ToTable("CourseClasses");
                });

            modelBuilder.Entity("UniSportUAQ_API.Data.Inscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateInscription")
                        .HasColumnType("datetime2");

                    b.Property<string>("Id_Student")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Id_course")
                        .HasColumnType("int");

                    b.Property<bool>("In_Info")
                        .HasColumnType("bit");

                    b.Property<bool>("released")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Id_Student");

                    b.HasIndex("Id_course");

                    b.ToTable("Inscriptions");
                });

            modelBuilder.Entity("UniSportUAQ_API.Data.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Expediente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUsers");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("UniSportUAQ_API.Data.Admin", b =>
                {
                    b.HasBaseType("UniSportUAQ_API.Data.Models.ApplicationUser");

                    b.ToTable("Admins", (string)null);
                });

            modelBuilder.Entity("UniSportUAQ_API.Data.Models.Instructor", b =>
                {
                    b.HasBaseType("UniSportUAQ_API.Data.Models.ApplicationUser");

                    b.ToTable("Instructors", (string)null);
                });

            modelBuilder.Entity("UniSportUAQ_API.Data.Student", b =>
                {
                    b.HasBaseType("UniSportUAQ_API.Data.Models.ApplicationUser");

                    b.Property<int>("CurrentCourse")
                        .HasColumnType("int");

                    b.Property<string>("FinishedCoursesJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Group")
                        .HasColumnType("int");

                    b.Property<bool>("IsInOfficialGroup")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuscribed")
                        .HasColumnType("bit");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<string>("StudyPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SuscribedDateTime")
                        .HasColumnType("datetime2");

                    b.ToTable("Students", (string)null);
                });

            modelBuilder.Entity("UniSportUAQ_API.Data.Course", b =>
                {
                    b.HasOne("UniSportUAQ_API.Data.Models.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("InstructorId");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("UniSportUAQ_API.Data.CourseClass", b =>
                {
                    b.HasOne("UniSportUAQ_API.Data.Course", "Course")
                        .WithMany()
                        .HasForeignKey("Id_Course")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("UniSportUAQ_API.Data.Inscription", b =>
                {
                    b.HasOne("UniSportUAQ_API.Data.Student", "Student")
                        .WithMany()
                        .HasForeignKey("Id_Student")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniSportUAQ_API.Data.Course", "Course")
                        .WithMany()
                        .HasForeignKey("Id_course")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UniSportUAQ_API.Data.Admin", b =>
                {
                    b.HasOne("UniSportUAQ_API.Data.Models.ApplicationUser", null)
                        .WithOne()
                        .HasForeignKey("UniSportUAQ_API.Data.Admin", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniSportUAQ_API.Data.Models.Instructor", b =>
                {
                    b.HasOne("UniSportUAQ_API.Data.Models.ApplicationUser", null)
                        .WithOne()
                        .HasForeignKey("UniSportUAQ_API.Data.Models.Instructor", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniSportUAQ_API.Data.Student", b =>
                {
                    b.HasOne("UniSportUAQ_API.Data.Models.ApplicationUser", null)
                        .WithOne()
                        .HasForeignKey("UniSportUAQ_API.Data.Student", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
